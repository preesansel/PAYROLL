package com.payroll.controller;


import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.payroll.dto.PayrollDetails;
import com.payroll.dto.PayrollRequest;
import com.payroll.dto.TaxDTO;
import com.payroll.model.Payroll;
import com.payroll.repository.EmployeeRepository;
import com.payroll.service.PayrollService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/payroll")

public class PayrollController {
	@Autowired
    private PayrollService payrollService;
   

    @GetMapping("/calculate")
    public ResponseEntity<List<Payroll>> test() throws JsonProcessingException {
        List<Payroll> payrolls = payrollService.calculatePayrolls();
        return ResponseEntity.ok(payrolls);
    }
    
//    @PostMapping("/details")
//    public ResponseEntity<PayrollDetails> getPayrollDetails(
//            @RequestParam Long employeeId,
//            @RequestParam int year,
//            @RequestParam int month) {
//        PayrollDetails payrollDetails = payrollService.getPayrollDetails(employeeId, year, month);
//        
//        if (payrollDetails == null) {
//            return ResponseEntity.notFound().build();
//        }
//
//        return ResponseEntity.ok(payrollDetails);
//    }
//    @PostMapping("/details")
//    public ResponseEntity<PayrollDetails> getPayrollDetails(
//            @RequestBody Map<String, Object> request) {
//        Long employeeId = Long.valueOf(request.get("employeeId").toString());
//        int year = Integer.parseInt(request.get("year").toString());
//        int month = Integer.parseInt(request.get("month").toString());
//
//        PayrollDetails payrollDetails = payrollService.getPayrollDetails(employeeId, year, month);
//        
//        if (payrollDetails == null) {
//            return ResponseEntity.notFound().build();
//        }
//
//        return ResponseEntity.ok(payrollDetails);
//    }
    @PostMapping("/details")
    public ResponseEntity<PayrollDetails> getPayrollDetails(
            @RequestBody PayrollRequest request) {
        Long employeeId = request.getEmployeeId();
        int year = request.getYear();
        int month = request.getMonth();

        PayrollDetails payrollDetails = payrollService.getPayrollDetails(employeeId, year, month);
        
        if (payrollDetails == null) {
            return ResponseEntity.notFound().build();
        }

        return ResponseEntity.ok(payrollDetails);
    }


//    @ExceptionHandler(IllegalArgumentException.class)
//    public ResponseEntity<String> handleIllegalArgumentException(IllegalArgumentException e) {
//        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage());
//    }


}
